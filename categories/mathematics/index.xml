<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mathematics on Paul&#39;s blog</title>
    <link>https://blog.paulhankin.net/categories/mathematics/</link>
    <description>Recent content in Mathematics on Paul&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.paulhankin.net/categories/mathematics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Insurance and the Kelly criterion</title>
      <link>https://blog.paulhankin.net/kellycriterion/</link>
      <pubDate>Sun, 10 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paulhankin.net/kellycriterion/</guid>
      <description>&lt;p&gt;This article describes how to use the Kelly criterion to make rational
choices when confronted with a risky financial decision, and suggests
a way to estimate the most you should be willing to pay for any
particular sort of insurance.&lt;/p&gt;

&lt;p&gt;The Kelly criterion (which at its core is the idea that the logarithm
of your wealth is a better measure of money&#39;s value to you than its absolute
value) is well understood by the informed gambling community, and
should be more widely known.&lt;/p&gt;

&lt;p&gt;If you decide to apply the knowledge in this post, also consult with a financial
professional (which as we&#39;ll see later doesn&#39;t include most finance or economics
students, and most young financial professionals), and read the disclaimer at the end.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A novel and efficient way to compute Fibonacci numbers</title>
      <link>https://blog.paulhankin.net/fibonacci2/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paulhankin.net/fibonacci2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://blog.paulhankin.net/fibonacci/&#34;&gt;An earlier post&lt;/a&gt; described how to compute Fibonacci numbers in a single arithmetic expression.&lt;/p&gt;

&lt;p&gt;Far√© Rideau, the author of a &lt;a href=&#34;http://fare.tunes.org/files/fun/fibonacci.lisp&#34;&gt;page of Fibonacci computations in Lisp&lt;/a&gt;, suggested in a private
email a simple and efficient variant, that I believe is novel.&lt;/p&gt;

&lt;p&gt;For &lt;span  class=&#34;math&#34;&gt;\(X\)&lt;/span&gt; large enough, &lt;span  class=&#34;math&#34;&gt;\(\mathrm{Fib}_n = (X^{n+1}\ \mathrm{mod}\ (X^2-X-1))\ \mathrm{mod}\ X\)&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;That means you can compute Fibonacci numbers efficiently with a simple program:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for n in range(1, 21):
    X = 1&amp;lt;&amp;lt;(n+2)
    print(pow(X, n+1, X*X-X-1) % X)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This blog post describes how this method works, gives a few ways to think about it, easily infers the fast Fibonacci doubling formulas, provides a nice alternative to Binet&#39;s formula relating the golden ratio and Fibonacci numbers, and expands the method to generalized Fibonacci recurrences, including a near one-line solution to the problem of counting how many ways to reach the end-square of a 100-square game using a single six-sided dice.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>An integer formula for Fibonacci numbers</title>
      <link>https://blog.paulhankin.net/fibonacci/</link>
      <pubDate>Mon, 27 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paulhankin.net/fibonacci/</guid>
      <description>&lt;p&gt;This code, somewhat surprisingly, generates Fibonacci numbers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def fib(n):
    return (4 &amp;lt;&amp;lt; n*(3+n)) // ((4 &amp;lt;&amp;lt; 2*n) - (2 &amp;lt;&amp;lt; n) - 1) &amp;amp; ((2 &amp;lt;&amp;lt; n) - 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this blog post, I&#39;ll explain where it comes from and how it works.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>