<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Paul&#39;s blog</title>
    <link>https://blog.paulhankin.net/tags/programming/</link>
    <description>Recent content in Programming on Paul&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.paulhankin.net/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A gentle introduction to hard programming</title>
      <link>https://blog.paulhankin.net/learnprogramming/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.paulhankin.net/learnprogramming/</guid>
      <description>&lt;p&gt;As I was growing up in England in the 80s, there was a boom in
home microcomputers, with the Commodore 64, the ZX Spectrum,
and the BBC Micro being three popular choices. These
provided an excellent and approachable introduction to programming,
with many of my friends learning programming in BASIC and assembler.
We taught ourselves the fundamentals of computing while we were playing,
and at a relatively early age.&lt;/p&gt;

&lt;p&gt;These days the computing environment is complex, and it&#39;s much harder for a
beginner to get started, or even know how to get started. Mostly
programming is learnt at university or in other formal education.
While there is definitely more to learn now than before, it seems like
the fundamentals of coding should still be easier to pick up than
it currently is.&lt;/p&gt;

&lt;p&gt;This post takes a look at what made home micros effective
learning environments, and considers what a modern equivalent might look
like.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>